---
// Astro component for one Pokemon's icon and name.

import type { Ivs, PokemonSpecies } from '../models';

interface Props {
  pokemon: PokemonSpecies;
  statRanges: Record<keyof Ivs, [string, string]> | null;
}

const { pokemon, statRanges } = Astro.props;
const dex = pokemon.dex.toString().padStart(4, '0');
const { speciesId, speciesName, types } = pokemon;

const pokemonIcon = `/pokemon/${dex}-${speciesId}.png`;
---

<div class="flex flex-row gap-4">
  <img src={pokemonIcon} alt={speciesName} class="h-12 w-12 rounded-full" />
  <div>
    <h2 class="text-xl font-semibold">{speciesName}</h2>
    <div class="flex flex-row">
      <img
        src={`/types/${types[0]}.png`}
        alt={types[0]}
        class="h-4 w-4 rounded-full"
      />
      {
        types[1] ? (
          <img
            src={`/types/${types[1]}.png`}
            alt={types[1]}
            class="ml-1 h-4 w-4 rounded-full"
          />
        ) : null
      }
    </div>
  </div>
  <div>
    {
      statRanges && (
        <>
          <div class="text-xs italic">
            <span class="">
              {statRanges.atk[0]} - {statRanges.atk[1]} attack
            </span>
          </div>
          <div class="text-xs italic">
            <span class="">
              {statRanges.def[0]} - {statRanges.def[1]} defense;
              {statRanges.hp[0]} - {statRanges.hp[1]} HP
            </span>
          </div>
        </>
      )
    }
  </div>
</div>
